/* -----------------------------------------------------------------------------

  HAMBURGER ICONS COMPONENT
  
----------------------------------------------------------------------------- */

// vars

//original values
/*$button-width: 96px;                    // The width of the button area*/
/*$button-height: 96px;                   // The height of the button area*/
/*$bar-thickness: 8px;                    // The thickness of the button bars*/
/*$button-pad: 18px;                      // The left/right padding between button area and bars.*/
/*$button-bar-space: 12px;                // The spacing between button bars*/
/*$button-transistion-duration: 0.3s;     // The transition duration*/
//values that work with a header bar of 32px (2rem), make sure pixels are integers!
$button-width: 32px;                    // The width of the button area
$button-height: 32px;                   // The height of the button area
$bar-thickness: 3px;                    // The thickness of the button bars
$button-pad: 6px;                      // The left/right padding between button area and bars.
$button-bar-space: 4px;                // The spacing between button bars
$button-transistion-duration: 0.3s;     // The transition duration
/*$button-width: 2rem;                    // The width of the button area*/
/*$button-height: 2rem;                   // The height of the button area*/
/*$bar-thickness: 0.167rem;                    // The thickness of the button bars*/
/*$button-pad: 0.375rem;                      // The left/right padding between button area and bars.*/
/*$button-bar-space: 0.25rem;                // The spacing between button bars*/
/*$button-transistion-duration: 0.3s;     // The transition duration*/

/**
 * Toggle Switch Globals
 *
 * All switches should take on the class `c-hamburger` as well as their
 * variant that will give them unique properties. This class is an overview
 * class that acts as a reset for all versions of the icon.
 */

.c-hamburger {
  display: block;
  position: relative;
  overflow: hidden;
  margin: 0;
  padding: 0;
  width: $button-width;
  height: $button-height;
  font-size: 0;
  text-indent: -9999px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  box-shadow: none;
  border-radius: none;
  border: none;
  cursor: pointer;
  transition: background $button-transistion-duration;
}

.c-hamburger:focus {
  outline: none;
}

.c-hamburger span {
  display: block;
  position: absolute;
  top: ($button-height / 2) - ($bar-thickness / 2);
  left: $button-pad;
  right: $button-pad;
  height: $bar-thickness;
  background: rgb(255,255,255);
}

.c-hamburger span::before,
.c-hamburger span::after {
  position: absolute;
  display: block;
  left: 0;
  width: 100%;
  height: $bar-thickness;
  background-color: #fff;
  content: "";
}

.c-hamburger span::before {
  top: -$bar-thickness - $button-bar-space;
}

.c-hamburger span::after {
  bottom: -$bar-thickness - $button-bar-space;
}

/**
 * Style 1
 *
 * Rotating hamburger icon (rot), that simply rotates 90 degrees when activated.
 * Nothing too fancy, simple transition.
 */

.c-hamburger--rot {
  background-color: rgb(40,170,220);
}

.c-hamburger--rot span {
  transition: transform $button-transistion-duration;
}

/* active state, i.e. menu open */

.c-hamburger--rot.is-active {
  background-color: darken(rgb(40,170,220), 20%);
}

.c-hamburger--rot.is-active span {
  transform: rotate(90deg);
}

